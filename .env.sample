# Claude Code Metrics Lab Environment Configuration
# Copy this file to .env and adjust values as needed

# OpenTelemetry Configuration
CLAUDE_CODE_ENABLE_TELEMETRY=1
OTEL_METRICS_EXPORTER=otlp
OTEL_EXPORTER_OTLP_PROTOCOL=http/json

# OTLP Endpoint Configuration
# For local netcat proxy passthrough (development/debugging)
OTEL_EXPORTER_OTLP_ENDPOINT=http://localhost:14318

# For direct connection to collector
# OTEL_EXPORTER_OTLP_ENDPOINT=http://pi.lan:4318

# For production SaaS providers
# OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io
# OTEL_EXPORTER_OTLP_HEADERS="x-honeycomb-team=YOUR_API_KEY"

# Metric Export Settings
OTEL_METRIC_EXPORT_INTERVAL=30000  # 30 seconds
OTEL_METRIC_EXPORT_TIMEOUT=10000   # 10 seconds

# Service Identification
OTEL_SERVICE_NAME=claude-code
OTEL_SERVICE_VERSION=1.0.0
OTEL_RESOURCE_ATTRIBUTES="deployment.environment=development,service.namespace=metrics-lab"

# Debugging Options
OTEL_LOG_LEVEL=info  # debug, info, warn, error
OTEL_TRACES_EXPORTER=none  # Disable traces if only using metrics

# Netcat Proxy Configuration (for local debugging)
# Use with: make otlp-debug-sink or make otlp-interceptor
NETCAT_PROXY_HOST=localhost
NETCAT_PROXY_PORT=14318
NETCAT_FORWARD_HOST=pi.lan
NETCAT_FORWARD_PORT=4318

# Python Environment (for analysis scripts)
PYTHONUNBUFFERED=1

# Grafana Dashboard Variables
GRAFANA_URL=http://pi.lan:3000
GRAFANA_API_KEY=
PROMETHEUS_URL=http://pi.lan:9090

# Cost Tracking
CLAUDE_COST_PER_1K_TOKENS_INPUT=0.015
CLAUDE_COST_PER_1K_TOKENS_OUTPUT=0.075

# Daily Limits (for harness scripts)
DAILY_SPEND_LIMIT=25.00
REPO_DELAY_SECONDS=300